{"version":3,"file":"static/js/6.0216fdc9.chunk.js","mappings":"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","sources":["Pages/Home.jsx","Services/MovieApi.js","components/Home.styled.jsx","components/TrendingLink.jsx"],"sourcesContent":["import { useEffect, useState } from 'react';\nimport { InfinitySpin } from 'react-loader-spinner';\nimport { getPopularFilms } from 'Services/MovieApi';\n\nimport TrendingLink from 'components/TrendingLink';\nimport { Title } from 'components/Home.styled';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        setLoading(true);\n        const data = await getPopularFilms();\n        setMovies(data);\n      } catch (error) {\n        setError('Oops. Something went wrong ðŸ˜­');\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovies();\n  }, []);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(error);\n    }\n  }, [error]);\n\n  return (\n    <>\n      {!loading && !error && movies && (\n        <div>\n          <Title>Trending today</Title>\n          <ul>\n            {movies.map(({ id, original_title }) => {\n              return <TrendingLink key={id} name={original_title} id={id} />;\n            })}\n          </ul>\n        </div>\n      )}\n      {loading && !error && <InfinitySpin width=\"200\" color=\"#4fa94d\" />}\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={5000}\n        closeOnClick\n        theme=\"colored\"\n      />\n    </>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '2963fc82afd3cb57f64d050a1ba5935c';\n\nexport async function getPopularFilms() {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const { data } = await axios.get('/trending/movie/day', { params });\n  const movies = data.results.map(({ id, original_title }) => ({\n    id,\n    original_title,\n  }));\n  return movies;\n}\n\nexport async function getSearchFilms(query) {\n  const params = {\n    query,\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const { data } = await axios.get('/search/movie', { params });\n  const movies = data.results.map(({ id, original_title }) => ({\n    id,\n    original_title,\n  }));\n  return movies;\n}\n\nexport async function getFilmsById(id) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const { data } = await axios.get(`/movie/${id}`, { params });\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = data;\n  return {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  };\n}\n\nexport async function getCreditsById(id) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const { data } = await axios.get(`/movie/${id}/credits`, { params });\n  const credits = data.cast.map(({ id, name, profile_path }) => ({\n    id,\n    name,\n    profile_path,\n  }));\n  return credits;\n}\n\nexport async function getReviewsById(id) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const { data } = await axios.get(`/movie/${id}/reviews`, { params });\n  const reviews = data.results.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n  return reviews;\n}\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Title = styled.h1`\n  color: #000;\n  text-decoration: underline;\n  font-weight: 700;\n  font-size: 48px;\n`;\n\nexport const MovieItem = styled(NavLink)`\n  font-size: 20px;\n  margin-bottom: 20px;\n  display: block;\n  font-style: italic;\n`;\n","import React from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { MovieItem } from './Home.styled';\n\nconst TrendingLink = ({ name, id }) => {\n  const location = useLocation();\n  return (\n    <MovieItem>\n      <NavLink to={`/movies/${id}`} state={{ from: location }}>\n        {name}\n      </NavLink>\n    </MovieItem>\n  );\n};\n\nexport default TrendingLink;\n"],"names":["useState","movies","setMovies","loading","setLoading","error","setError","useEffect","getMovies","getPopularFilms","data","toast","map","id","original_title","name","width","color","position","autoClose","closeOnClick","theme","axios","API_KEY","params","api_key","language","include_adult","results","getSearchFilms","query","getFilmsById","poster_path","release_date","vote_average","overview","genres","getCreditsById","credits","cast","profile_path","getReviewsById","reviews","author","content","Title","styled","MovieItem","NavLink","location","useLocation","to","state","from"],"sourceRoot":""}