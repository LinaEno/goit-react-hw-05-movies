{"version":3,"file":"static/js/189.1cdeaa16.chunk.js","mappings":"6TAGAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,iGACCC,EAAS,CACbC,QAASH,EACTI,SAAU,QACVC,eAAe,GAJZ,SAMkBN,EAAAA,EAAAA,IAAU,sBAAuB,CAAEG,OAAAA,IANrD,uBAMGI,EANH,EAMGA,KACFC,EAASD,EAAKE,QAAQC,KAAI,kBAA6B,CAC3DC,GAD8B,EAAGA,GAEjCC,eAF8B,EAAOA,eAAP,IAP3B,kBAWEJ,GAXF,kEAcA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAA8BC,GAA9B,oFACCX,EAAS,CACbW,MAAAA,EACAV,QAASH,EACTI,SAAU,QACVC,eAAe,GALZ,SAOkBN,EAAAA,EAAAA,IAAU,gBAAiB,CAAEG,OAAAA,IAP/C,uBAOGI,EAPH,EAOGA,KACFC,EAASD,EAAKE,QAAQC,KAAI,kBAA6B,CAC3DC,GAD8B,EAAGA,GAEjCC,eAF8B,EAAOA,eAAP,IAR3B,kBAYEJ,GAZF,kEAeA,SAAeO,EAAtB,+CAAO,OAAP,oBAAO,WAA4BJ,GAA5B,8FACCR,EAAS,CACbC,QAASH,EACTI,SAAU,QACVC,eAAe,GAJZ,SAMkBN,EAAAA,EAAAA,IAAA,iBAAoBW,GAAM,CAAER,OAAAA,IAN9C,uBAMGI,EANH,EAMGA,KAENS,EAMET,EANFS,YACAJ,EAKEL,EALFK,eACAK,EAIEV,EAJFU,aACAC,EAGEX,EAHFW,aACAC,EAEEZ,EAFFY,SACAC,EACEb,EADFa,OAbG,kBAeE,CACLJ,YAAaK,EAAUL,GACvBJ,eAAAA,EACAK,aAAcA,EAAaK,MAAM,EAAG,GACpCJ,aAAcA,EAAaK,QAAQ,GACnCJ,SAAAA,EACAC,OAAQA,EAAOV,KAAI,qBAAGc,IAAH,IAAoBC,KAAK,QArBzC,kEAyBA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAA8Bf,GAA9B,oFACCR,EAAS,CACbC,QAASH,EACTI,SAAU,QACVC,eAAe,GAJZ,SAMkBN,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,YAAkC,CAAER,OAAAA,IANtD,uBAMGI,EANH,EAMGA,KACFoB,EAAUpB,EAAKqB,KAAKlB,KAAI,gBAAGC,EAAH,EAAGA,GAAIa,EAAP,EAAOA,KAAMK,EAAb,EAAaA,aAAb,MAAiC,CAC7DlB,GAAAA,EACAa,KAAAA,EACAK,aAAcR,EAAUQ,GAHI,IAPzB,kBAYEF,GAZF,kEAeA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAA8BnB,GAA9B,oFACCR,EAAS,CACbC,QAASH,EACTI,SAAU,QACVC,eAAe,GAJZ,SAMkBN,EAAAA,EAAAA,IAAA,iBAAoBW,EAApB,YAAkC,CAAER,OAAAA,IANtD,uBAMGI,EANH,EAMGA,KACFwB,EAAUxB,EAAKE,QAAQC,KAAI,kBAA8B,CAC7DC,GAD+B,EAAGA,GAElCqB,OAF+B,EAAOA,OAGtCC,QAH+B,EAAeA,QAAf,IAP5B,kBAYEF,GAZF,kEAeP,IAAMV,EAAY,SAAAa,GAAG,OACnBA,EAAM,kCAAoCA,EAAMC,CAD7B,C,wMCvFRC,GAAaC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAH,sRAgBVE,EAAaF,EAAAA,GAAAA,IAAH,kIASVG,EAAeH,EAAAA,GAAAA,GAAH,2GAOZI,EAAcJ,EAAAA,GAAAA,EAAH,yFAMXK,GAAWL,EAAAA,EAAAA,IAAOD,EAAPC,CAAH,mT,SCvCRM,EAAU,SAAC,GAAsB,IAApBC,EAAmB,EAAnBA,aAEtB5B,EAME4B,EANF5B,YACAJ,EAKEgC,EALFhC,eACAK,EAIE2B,EAJF3B,aACAC,EAGE0B,EAHF1B,aACAC,EAEEyB,EAFFzB,SACAC,EACEwB,EADFxB,OAEF,OACE,+BACE,UAACmB,EAAD,YACE,gBAAKM,IAAK7B,EAAa8B,IAAKlC,KAC5B,4BACE,UAAC4B,EAAD,WACG5B,EADH,IACoBK,EADpB,QAGA,UAACwB,EAAD,0BAA0BvB,MAC1B,SAACuB,EAAD,wBACA,uBAAItB,KACJ,SAACsB,EAAD,sBACA,uBAAIrB,WAKb,E,UCiDD,EAhEsB,WAAO,IAAD,EAC1B,GAAwC2B,EAAAA,EAAAA,UAAS,MAAjD,eAAOH,EAAP,KAAqBI,EAArB,KACA,GAA8BD,EAAAA,EAAAA,WAAS,GAAvC,eAAOE,EAAP,KAAgBC,EAAhB,KACQC,GAAYC,EAAAA,EAAAA,MAAZD,QACFE,GAAWC,EAAAA,EAAAA,MACjB,GAA0BP,EAAAA,EAAAA,UAAS,IAAnC,eAAOQ,EAAP,KAAcC,EAAd,KAEMC,EAAQ,UAAGJ,EAASK,aAAZ,aAAG,EAAgBC,KA0BjC,OAxBAC,EAAAA,EAAAA,YAAU,WACR,GAAKT,EAAL,CACA,IAAMU,EAAY,mCAAG,WAAMV,GAAN,uFAEjBD,GAAW,GAFM,UAGUnC,EAAAA,EAAAA,IAAaoC,GAHvB,OAGXP,EAHW,OAKjBI,EAAgBJ,GAChBY,EAAS,IANQ,gDAQjBA,EAAS,2CARQ,yBAUjBN,GAAW,GAVM,4EAAH,sDAalBW,EAAaV,EAdO,CAerB,GAAE,CAACA,KAEJS,EAAAA,EAAAA,YAAU,WACJL,GACFO,EAAAA,GAAAA,MAAYP,EAEf,GAAE,CAACA,KAGF,gCACGX,IAAiBK,IAAYM,IAC5B,4BACE,SAACnB,EAAD,CAAY2B,GAAIN,EAAhB,sBACA,SAACd,EAAD,CAASC,aAAcA,KACvB,4BACE,SAACJ,EAAD,sCAEA,SAACE,EAAD,CAAUqB,GAAG,OAAOL,MAAO,CAAEC,KAAMF,GAAnC,mBAGA,SAACf,EAAD,CAAUqB,GAAG,UAAUL,MAAO,CAAEC,KAAMF,GAAtC,sBAIA,SAAC,KAAD,UAILR,IAAYM,IAAS,SAAC,KAAD,CAAcS,MAAM,MAAMC,MAAM,aACtD,SAAC,KAAD,CACEC,SAAS,aACTC,UAAW,IACXC,cAAY,EACZC,MAAM,cAIb,C","sources":["Services/MovieApi.js","components/Details/MovieDetails.styled.jsx","components/Details/Details.jsx","pages/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nimport defaultImg from '../img/zaglushka.jpg';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '2963fc82afd3cb57f64d050a1ba5935c';\n\nexport async function getPopularFilms() {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const { data } = await axios.get('/trending/movie/day', { params });\n  const movies = data.results.map(({ id, original_title }) => ({\n    id,\n    original_title,\n  }));\n  return movies;\n}\n\nexport async function getSearchFilms(query) {\n  const params = {\n    query,\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const { data } = await axios.get('/search/movie', { params });\n  const movies = data.results.map(({ id, original_title }) => ({\n    id,\n    original_title,\n  }));\n  return movies;\n}\n\nexport async function getFilmsById(id) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const { data } = await axios.get(`/movie/${id}`, { params });\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = data;\n  return {\n    poster_path: getPoster(poster_path),\n    original_title,\n    release_date: release_date.slice(0, 4),\n    vote_average: vote_average.toFixed(1),\n    overview,\n    genres: genres.map(({ name }) => name).join(', '),\n  };\n}\n\nexport async function getCreditsById(id) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const { data } = await axios.get(`/movie/${id}/credits`, { params });\n  const credits = data.cast.map(({ id, name, profile_path }) => ({\n    id,\n    name,\n    profile_path: getPoster(profile_path),\n  }));\n  return credits;\n}\n\nexport async function getReviewsById(id) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const { data } = await axios.get(`/movie/${id}/reviews`, { params });\n  const reviews = data.results.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n  return reviews;\n}\n\nconst getPoster = url =>\n  url ? 'https://image.tmdb.org/t/p/w500' + url : defaultImg;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const ButtonBack = styled(NavLink)`\n  display: block;\n  width: 100px;\n  border: 1px solid #aaa5a5;\n  font-size: 16px;\n  text-align: center;\n  padding: 10px 0;\n  margin-top: 50px;\n  margin-bottom: 20px;\n  &:hover,\n  &:focus {\n    background-color: #292424;\n    color: #fff;\n  }\n`;\n\nexport const DetailsBox = styled.div`\n  display: flex;\n  margin-bottom: 50px;\n  & > img {\n    display: block;\n    margin-right: 50px;\n  }\n`;\n\nexport const DetailsTitle = styled.h2`\n  margin-top: 0;\n  font-size: 48px;\n  font-weight: 700;\n  margin-bottom: 30px;\n`;\n\nexport const DetailsText = styled.p`\n  font-size: 16px;\n  font-weight: 700;\n  margin-bottom: 15px;\n`;\n\nexport const InfoLink = styled(ButtonBack)`\n  display: inline-block;\n  width: 80px;\n  border: 1px solid #aaa5a5;\n  font-size: 16px;\n  text-align: center;\n  padding: 10px 0;\n  margin-top: 20px;\n  margin-bottom: 20px;\n  margin-right: 30px;\n  &:hover,\n  &:focus {\n    background-color: #292424;\n    color: #fff;\n  }\n`;\n","import { DetailsBox, DetailsText, DetailsTitle } from './MovieDetails.styled';\n\nexport const Details = ({ movieDetails }) => {\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movieDetails;\n  return (\n    <>\n      <DetailsBox>\n        <img src={poster_path} alt={original_title} />\n        <div>\n          <DetailsTitle>\n            {original_title}({release_date})\n          </DetailsTitle>\n          <DetailsText>User score: {vote_average}</DetailsText>\n          <DetailsText>Overview</DetailsText>\n          <p>{overview}</p>\n          <DetailsText>Genres</DetailsText>\n          <p>{genres}</p>\n        </div>\n      </DetailsBox>\n    </>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { useParams, useLocation, Outlet } from 'react-router-dom';\nimport { getFilmsById } from 'Services/MovieApi';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { Details } from 'components/Details/Details';\nimport {\n  ButtonBack,\n  DetailsTitle,\n  InfoLink,\n} from 'components/Details/MovieDetails.styled';\nimport { InfinitySpin } from 'react-loader-spinner';\n\nconst MoviesDetails = () => {\n  const [movieDetails, setMovieDetails] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const { movieId } = useParams();\n  const location = useLocation();\n  const [error, setError] = useState('');\n\n  const backLink = location.state?.from;\n\n  useEffect(() => {\n    if (!movieId) return;\n    const getMovieById = async movieId => {\n      try {\n        setLoading(true);\n        const movieDetails = await getFilmsById(movieId);\n\n        setMovieDetails(movieDetails);\n        setError('');\n      } catch (error) {\n        setError('Oops. Something went wrong ðŸ˜­');\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovieById(movieId);\n  }, [movieId]);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(error);\n    }\n  }, [error]);\n\n  return (\n    <>\n      {movieDetails && !loading && !error && (\n        <div>\n          <ButtonBack to={backLink}>Go back</ButtonBack>\n          <Details movieDetails={movieDetails} />\n          <div>\n            <DetailsTitle>Additional information</DetailsTitle>\n\n            <InfoLink to=\"cast\" state={{ from: backLink }}>\n              Cast\n            </InfoLink>\n            <InfoLink to=\"reviews\" state={{ from: backLink }}>\n              Reviews\n            </InfoLink>\n\n            <Outlet />\n          </div>\n        </div>\n      )}\n      {loading && !error && <InfinitySpin width=\"200\" color=\"#4fa94d\" />}\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={5000}\n        closeOnClick\n        theme=\"colored\"\n      />\n    </>\n  );\n};\n\nexport default MoviesDetails;\n"],"names":["axios","API_KEY","getPopularFilms","params","api_key","language","include_adult","data","movies","results","map","id","original_title","getSearchFilms","query","getFilmsById","poster_path","release_date","vote_average","overview","genres","getPoster","slice","toFixed","name","join","getCreditsById","credits","cast","profile_path","getReviewsById","reviews","author","content","url","defaultImg","ButtonBack","styled","NavLink","DetailsBox","DetailsTitle","DetailsText","InfoLink","Details","movieDetails","src","alt","useState","setMovieDetails","loading","setLoading","movieId","useParams","location","useLocation","error","setError","backLink","state","from","useEffect","getMovieById","toast","to","width","color","position","autoClose","closeOnClick","theme"],"sourceRoot":""}