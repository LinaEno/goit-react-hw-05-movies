{"version":3,"file":"static/js/983.a7f22905.chunk.js","mappings":"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","sources":["Services/MovieApi.js","components/Home/Home.styled.jsx","components/Home/TrendingLink.jsx","components/MoviesList/MoviesList.jsx","pages/HomePage.jsx"],"sourcesContent":["import axios from 'axios';\nimport defaultImg from '../img/zaglushka.jpg';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '2963fc82afd3cb57f64d050a1ba5935c';\n\nexport async function getPopularFilms() {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const { data } = await axios.get('/trending/movie/day', { params });\n  const movies = data.results.map(({ id, original_title }) => ({\n    id,\n    original_title,\n  }));\n  return movies;\n}\n\nexport async function getSearchFilms(query) {\n  const params = {\n    query,\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const { data } = await axios.get('/search/movie', { params });\n  const movies = data.results.map(({ id, original_title }) => ({\n    id,\n    original_title,\n  }));\n  return movies;\n}\n\nexport async function getFilmsById(id) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const { data } = await axios.get(`/movie/${id}`, { params });\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = data;\n  return {\n    poster_path: getPoster(poster_path),\n    original_title,\n    release_date: release_date.slice(0, 4),\n    vote_average: vote_average.toFixed(1),\n    overview,\n    genres: genres.map(({ name }) => name).join(', '),\n  };\n}\n\nexport async function getCreditsById(id) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const { data } = await axios.get(`/movie/${id}/credits`, { params });\n  const credits = data.cast.map(({ id, name, profile_path }) => ({\n    id,\n    name,\n    profile_path: getPoster(profile_path),\n  }));\n  return credits;\n}\n\nexport async function getReviewsById(id) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const { data } = await axios.get(`/movie/${id}/reviews`, { params });\n  const reviews = data.results.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n  return reviews;\n}\n\nconst getPoster = url =>\n  url ? 'https://image.tmdb.org/t/p/w500' + url : defaultImg;\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Title = styled.h1`\n  color: #000;\n  text-decoration: underline;\n  font-weight: 700;\n  font-size: 48px;\n`;\n\nexport const MovieItem = styled(NavLink)`\n  font-size: 20px;\n  margin-bottom: 20px;\n  display: block;\n  font-style: italic;\n`;\n","import React from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { MovieItem } from './Home.styled';\n\nconst MovieLink = ({ name, id }) => {\n  const location = useLocation();\n  return (\n    <MovieItem>\n      <NavLink to={`/movies/${id}`} state={{ from: location }}>\n        {name}\n      </NavLink>\n    </MovieItem>\n  );\n};\n\nexport default MovieLink;\n","import MovieLink from 'components/Home/TrendingLink';\n\nexport const MoviesList = ({ movies }) => {\n  return (\n    <ul>\n      {movies.map(({ id, original_title }) => {\n        return <MovieLink key={id} name={original_title} id={id} />;\n      })}\n    </ul>\n  );\n};\n","import { useEffect, useState } from 'react';\nimport { InfinitySpin } from 'react-loader-spinner';\nimport { getPopularFilms } from 'Services/MovieApi';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Title } from 'components/Home/Home.styled';\nimport { toast, ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    const getMovies = async () => {\n      try {\n        setLoading(true);\n        const data = await getPopularFilms();\n        setMovies(data);\n        setError('');\n      } catch (error) {\n        setError('Oops. Something went wrong ðŸ˜­');\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovies();\n  }, []);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(error);\n    }\n  }, [error]);\n\n  return (\n    <>\n      {!loading && !error && movies && (\n        <div>\n          <Title>Trending today</Title>\n          <MoviesList movies={movies} />\n        </div>\n      )}\n      {loading && !error && <InfinitySpin width=\"200\" color=\"#4fa94d\" />}\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={5000}\n        closeOnClick\n        theme=\"colored\"\n      />\n    </>\n  );\n};\n\nexport default Home;\n"],"names":["axios","API_KEY","getPopularFilms","params","api_key","language","include_adult","data","movies","results","map","id","original_title","getSearchFilms","query","getFilmsById","poster_path","release_date","vote_average","overview","genres","getPoster","slice","toFixed","name","join","getCreditsById","credits","cast","profile_path","getReviewsById","reviews","author","content","url","defaultImg","Title","styled","MovieItem","NavLink","location","useLocation","to","state","from","MoviesList","useState","setMovies","loading","setLoading","error","setError","useEffect","getMovies","toast","width","color","position","autoClose","closeOnClick","theme"],"sourceRoot":""}