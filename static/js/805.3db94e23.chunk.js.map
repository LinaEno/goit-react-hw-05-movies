{"version":3,"file":"static/js/805.3db94e23.chunk.js","mappings":"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","sources":["components/Form.styled.jsx","components/SearchBar.jsx","Pages/Movies.jsx","Services/MovieApi.js","components/Home.styled.jsx","components/TrendingLink.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Input = styled.input`\n  width: 200px;\n  margin-right: 10px;\n  font-size: 20px;\n  padding: 10px;\n`;\n\n// export const SearchButton = styled.button``;\n\nexport const Form = styled.form`\n  margin-bottom: 40px;\n  margin-top: 40px;\n`;\n","import { useSearchParams } from 'react-router-dom';\nimport { Form, Input } from './Form.styled';\n\nexport default function SearchBar({ onSubmit }) {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit(query);\n  };\n\n  const handleChange = e => {\n    const query = e.target.value;\n    setSearchParams({ query });\n  };\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit}>\n        <Input\n          onChange={handleChange}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          value={query}\n        />\n      </Form>\n    </div>\n  );\n}\n","import React, { useEffect, useState } from 'react';\nimport { InfinitySpin } from 'react-loader-spinner';\n\nimport SearchBar from 'components/SearchBar';\nimport { getSearchFilms } from 'Services/MovieApi';\nimport TrendingLink from 'components/TrendingLink';\nimport { useSearchParams } from 'react-router-dom';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\n\nconst Movies = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchParams] = useSearchParams();\n  const query = searchParams.get('query');\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n\n  useEffect(() => {\n    if (!query) return;\n    const getMovies = async () => {\n      try {\n        setLoading(true);\n        const movies = await getSearchFilms(query);\n        setMovies(movies);\n        if (!movies.length) {\n          setError('Sorry. There are no movies ... ðŸ˜­');\n          return;\n        }\n      } catch (error) {\n        setError('Oops. Something went wrong ðŸ˜­');\n      } finally {\n        setLoading(false);\n      }\n    };\n    getMovies();\n  }, [query]);\n\n  useEffect(() => {\n    if (error) {\n      toast.error(error);\n    }\n  }, [error]);\n\n  const setQueryFunc = fetchQuery => {\n    if (query === fetchQuery) {\n      console.log('Enter new request');\n    }\n  };\n\n  return (\n    <div>\n      <SearchBar onSubmit={setQueryFunc} />\n      {!loading && !error && movies && (\n        <ul>\n          {movies.map(({ id, original_title }) => {\n            return <TrendingLink key={id} name={original_title} id={id} />;\n          })}\n        </ul>\n      )}\n\n      {loading && !error && <InfinitySpin width=\"200\" color=\"#4fa94d\" />}\n      <ToastContainer\n        position=\"top-center\"\n        autoClose={5000}\n        closeOnClick\n        theme=\"colored\"\n      />\n    </div>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '2963fc82afd3cb57f64d050a1ba5935c';\n\nexport async function getPopularFilms() {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const { data } = await axios.get('/trending/movie/day', { params });\n  const movies = data.results.map(({ id, original_title }) => ({\n    id,\n    original_title,\n  }));\n  return movies;\n}\n\nexport async function getSearchFilms(query) {\n  const params = {\n    query,\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const { data } = await axios.get('/search/movie', { params });\n  const movies = data.results.map(({ id, original_title }) => ({\n    id,\n    original_title,\n  }));\n  return movies;\n}\n\nexport async function getFilmsById(id) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const { data } = await axios.get(`/movie/${id}`, { params });\n  const {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = data;\n  return {\n    poster_path,\n    original_title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  };\n}\n\nexport async function getCreditsById(id) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const { data } = await axios.get(`/movie/${id}/credits`, { params });\n  const credits = data.cast.map(({ id, name, profile_path }) => ({\n    id,\n    name,\n    profile_path,\n  }));\n  return credits;\n}\n\nexport async function getReviewsById(id) {\n  const params = {\n    api_key: API_KEY,\n    language: 'en-US',\n    include_adult: false,\n  };\n  const { data } = await axios.get(`/movie/${id}/reviews`, { params });\n  const reviews = data.results.map(({ id, author, content }) => ({\n    id,\n    author,\n    content,\n  }));\n  return reviews;\n}\n","import { NavLink } from 'react-router-dom';\nimport styled from 'styled-components';\n\nexport const Title = styled.h1`\n  color: #000;\n  text-decoration: underline;\n  font-weight: 700;\n  font-size: 48px;\n`;\n\nexport const MovieItem = styled(NavLink)`\n  font-size: 20px;\n  margin-bottom: 20px;\n  display: block;\n  font-style: italic;\n`;\n","import React from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\nimport { MovieItem } from './Home.styled';\n\nconst TrendingLink = ({ name, id }) => {\n  const location = useLocation();\n  return (\n    <MovieItem>\n      <NavLink to={`/movies/${id}`} state={{ from: location }}>\n        {name}\n      </NavLink>\n    </MovieItem>\n  );\n};\n\nexport default TrendingLink;\n"],"names":["Input","styled","Form","SearchBar","onSubmit","useSearchParams","searchParams","setSearchParams","query","get","e","preventDefault","onChange","target","value","type","autoComplete","autoFocus","useState","movies","setMovies","loading","setLoading","error","setError","useEffect","getMovies","getSearchFilms","length","toast","fetchQuery","console","log","map","id","original_title","TrendingLink","name","width","color","position","autoClose","closeOnClick","theme","axios","API_KEY","getPopularFilms","params","api_key","language","include_adult","data","results","getFilmsById","poster_path","release_date","vote_average","overview","genres","getCreditsById","credits","cast","profile_path","getReviewsById","reviews","author","content","Title","MovieItem","NavLink","location","useLocation","to","state","from"],"sourceRoot":""}